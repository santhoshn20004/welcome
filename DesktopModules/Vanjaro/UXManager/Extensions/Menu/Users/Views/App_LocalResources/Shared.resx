<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="All.Text" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Approved.Text" xml:space="preserve">
    <value>Authorized:</value>
  </data>
  <data name="Authorized.Header" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Authorized.Text" xml:space="preserve">
    <value>Authorized</value>
  </data>
  <data name="InSufficientPermissions.Text" xml:space="preserve">
    <value>You do not have enough permissions to perform this action.</value>
  </data>
  <data name="SuperUsers.Text" xml:space="preserve">
    <value>Superusers</value>
  </data>
  <data name="UnAuthorized.Text" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="UsernameNotUnique.Text" xml:space="preserve">
    <value>Username must be unique.</value>
  </data>
  <data name="UserNotFound.Text" xml:space="preserve">
    <value>User not found.</value>
  </data>
  <data name="OptionUnavailable.Text" xml:space="preserve">
    <value>Reset Password option is currently unavailable.</value>
  </data>
  <data name="InvalidPasswordAnswer.Text" xml:space="preserve">
    <value>Password answer is invalid.</value>
  </data>
  <data name="PasswordResetFailed.Text" xml:space="preserve">
    <value>Your new password was not accepted for security reasons.  Please enter a password that you haven't used before and is long and complex enough to meet the site's password complexity requirements.</value>
  </data>
  <data name="RoleIsNotApproved.Text" xml:space="preserve">
    <value>Cannot assign a role which is not approved.</value>
  </data>
  <data name="UserDeleteError.Text" xml:space="preserve">
    <value>Failed to delete the user.</value>
  </data>
  <data name="UserRemoveError.Text" xml:space="preserve">
    <value>Can not remove the user.</value>
  </data>
  <data name="UserRestoreError.Text" xml:space="preserve">
    <value>Can not restore the user.</value>
  </data>
  <data name="RegistrationNotAllowed.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="InvalidUserName.Text" xml:space="preserve">
    <value>The username specified is invalid.</value>
  </data>
  <data name="RegistrationExcludedTermsUsed.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="RegistrationInvalidEmailUsed.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="RegistrationInvalidUserNameUsed.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="RegistrationProfanityNotAllowed.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="RegistrationUsernameAlreadyPresent.Text" xml:space="preserve">
    <value>The username is already in use.</value>
  </data>
  <data name="PasswordMismatched.Text" xml:space="preserve">
    <value>Password mismatched</value>
  </data>
  <data name="Users.Text" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Site.Text" xml:space="preserve">
    <value>Site</value>
  </data>
  <data name="Restore.Text" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="HttpStatusCode.NotFound_404.Text" xml:space="preserve">
    <value>User not found.</value>
  </data>
  <data name="HttpStatusCode.Unauthorized_401.Text" xml:space="preserve">
    <value>You do not have enough permissions to perform this action.</value>
  </data>
  <data name="Service_RemoveUserError.Text" xml:space="preserve">
    <value>Error removing page has occurred: {0}</value>
  </data>
  <data name="Service_RestoreTabModuleError.Text" xml:space="preserve">
    <value>Error restoring page has occurred: {0}</value>
  </data>
  <data name="Service_RestoreUserError.Text" xml:space="preserve">
    <value>Error restoring user.</value>
  </data>
  <data name="Dash.Text" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="error_PasswordMismatch.Text" xml:space="preserve">
    <value>The Password and Confirmation Password must match.</value>
  </data>
  <data name="Error.Text" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="UserRoleAlreadyExist.Text" xml:space="preserve">
    <value>An item with the same key has already been added.</value>
  </data>
  <data name="SearchKeywords.Text" xml:space="preserve">
    <value>user,users,member,members,account,accounts,password,reset password,authorize,authorize user,deauthorize,deauthorize user,change password,force password change,send password,send password reset link,send password reset,superuser,super user,login as user,become user,impersonate user,profile,user profile,user role,user roles,user audit,user account,user accounts,member profile,memberprofile,profile builder,member profile settings</value>
  </data>
  <data name="Shortcut_Text.Text" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="AddUser.Text" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="Shortcut_Title.Text" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="UserNotAvailable.Text" xml:space="preserve">
    <value>There are no users</value>
  </data>
  <data name="AuthorizedFalse.Text" xml:space="preserve">
    <value>Deauthorized</value>
  </data>
  <data name="AuthorizedTrue.Text" xml:space="preserve">
    <value>Authorized</value>
  </data>
  <data name="UserRoleAdded.Text" xml:space="preserve">
    <value>Added to {0}</value>
  </data>
  <data name="UserRoleRemoved.Text" xml:space="preserve">
    <value>Removed from {0}</value>
  </data>
  <data name="Usernamemustbeunique.Text" xml:space="preserve">
    <value>User name must be unique </value>
  </data>
  <data name="ChooseFiles.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="ClickDropZone.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="UploadActions.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="UploadName.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="UploadProgress.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="UploadSize.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="UploadStatus.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="NotSpecified.Text" xml:space="preserve">
    <value>&lt; Not Specified &gt;</value>
  </data>
  <data name="Validation_Length.Text" xml:space="preserve">
    <value>Invalid length</value>
  </data>
  <data name="FiledPropertyName.Text" xml:space="preserve">
    <value>&lt;strong&gt; [FiledPropertyName] : &lt;/strong&gt;</value>
  </data>
  <data name="FieldisInvalid.Text" xml:space="preserve">
    <value> is Invalid</value>
  </data>
  <data name="FieldisRequired.Text" xml:space="preserve">
    <value> is Required</value>
  </data>
  <data name="InvalidUser.Text" xml:space="preserve">
    <value>You do not have enough permissions to perform this action.</value>
  </data>
  <data name="CustomEditorOptions.Text" xml:space="preserve">
    <value>Custom Editor Options</value>
  </data>
  <data name="CancelImport.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MapFields.Text" xml:space="preserve">
    <value>Map Fields</value>
  </data>
  <data name="PreviewImport.Text" xml:space="preserve">
    <value>Preview Data</value>
  </data>
  <data name="SaveMapping.Text" xml:space="preserve">
    <value>Save Mapping</value>
  </data>
  <data name="MaximumUsersImportLimit.Text" xml:space="preserve">
    <value>Maximum of '+$scope.ui.data.MaximumUsersImportLimit.Value+' new accounts can be imported at a time.</value>
  </data>
  <data name="ImportUsers.Text" xml:space="preserve">
    <value>Import Users</value>
  </data>
</root>